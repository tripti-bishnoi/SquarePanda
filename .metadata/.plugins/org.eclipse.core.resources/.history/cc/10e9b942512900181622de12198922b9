package com.leetcode.medium;

public class DivideTwoIntegers_29 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		System.out.println(divide(1, -1));
	}

	private static int divide(int dividend, int divisor) {
		long result = divideHelper(Math.abs(dividend), Math.abs(divisor));
		if (result > Integer.MAX_VALUE || result < Integer.MIN_VALUE)
			return Integer.MAX_VALUE;
		if ((dividend < 0 && divisor > 0) || (dividend > 0 && divisor < 0))
			return (int) (0 - result);
		else
			return (int) result;
	}

	public static long divideHelper(int dividend, int divisor) {

		if (divisor == 0)
			return -1;
		if (dividend == 0)
			return 0;
		if (dividend == divisor)
			return 1;
		if (divisor == 1)
			return dividend;

		long quotient = 1;
		long temp = divisor;

		while (temp < dividend) {
			quotient <<= 1;
			temp <<= 1;
		}

		if (temp > dividend) {
			quotient >>= 1;
			temp >>= 1;
		}

		return quotient + divide((int) (dividend - temp), divisor);
	}

}
